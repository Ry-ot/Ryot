[package]
name = "ryot_internal"
version = "0.2.2"
edition = "2021"
authors = [
    "Lucas Grossi <lucas.ggrosis@gmail.com>",
    "Luan Santos <cargo@luan.sh>",
]
license = "AGPL-3.0-only"
description = "Internal utilities and foundational elements for use within the Ryot framework, supporting cross-crate functionality."
homepage = "https://github.com/ry-ot/Ryot"
repository = "https://github.com/ry-ot/Ryot"
documentation = "https://docs.rs/ryot/"
keywords = ["internal-utilities", "framework-support", "development-tools", "ryot"]
categories = ["game-development", "game-engines"]

[package.metadata.docs.rs]
rustdoc-args = ["-Zunstable-options", "--cfg", "docsrs"]
all-features = true

[features]
debug = [
    "ryot_sprites/debug",
    "ryot_tiled/debug",
]

bevy = [
    "ryot_assets",
    "ryot_core/bevy",
    "ryot_utils/bevy",
    "ryot_tiled/bevy",
    "ryot_tibia?/bevy",
]

compression = ["ryot_utils/compression"]
egui = ["ryot_tiled/egui"]
lmdb = ["ryot_tiled/lmdb"]

ray_cast = ["ryot_ray_casting"]
pathfinding = [
    "bevy",
    "ryot_tiled/pathfinding",
    "dep:ryot_pathfinder",
]
ryot_tibia = [
    "bevy",
    "dep:ryot_tibia",
    "ryot_assets?/ryot_tibia",
]

[dependencies]
ryot_assets = { path = "../ryot_assets", version = "0.2.0", optional = true }
ryot_utils = { path = "../ryot_utils", version = "0.2" }
ryot_core = { path = "../ryot_core", version = "0.2" }
ryot_pathfinder = { path = "../ryot_pathfinder", version = "0.2.0", optional = true }
ryot_ray_casting = { path = "../ryot_ray_casting", version = "0.2.0", optional = true }
ryot_sprites = { path = "../ryot_sprites", version = "0.2" }
ryot_tiled = { path = "../ryot_tiled", version = "0.2" }
ryot_tibia = { path = "../ryot_tibia", version = "0.2.0", optional = true }

