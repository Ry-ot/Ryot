name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      SKIP_BUILD_SCRIPT: true
      CARGO_INCREMENTAL: 0
      CARGO_NET_RETRY: 10
      RUST_BACKTRACE: short
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-01
      - name: Install Linux Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libasound2-dev libudev-dev libgtk-3-dev
        if: runner.os == 'linux'
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2
      - name: Compile
        run: cargo test --all-features --no-run --locked
      - name: Test
        run: cargo test --all-features -- --nocapture --quiet
  all-doc-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-01
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Install dependencies
        run: sudo apt-get install -y libgtk-3-dev protobuf-compiler
      - uses: Swatinem/rust-cache@v2
      - name: Run doc tests with all features (this also compiles README examples)
        run: cargo test --doc --all-features
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-01
          components: rustfmt, clippy
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Install dependencies
        run: sudo apt-get install -y libgtk-3-dev protobuf-compiler
      - uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- -Dwarnings
      - name: Check format
        run: cargo fmt --all -- --check
